
stages:
  - test
  - build
  - push_image
  - deployment

variables:
  REGISTRY_HOST: eu.gcr.io
  IMAGE_NAME: $REGISTRY_HOST/coyotta-2022/$CI_PROJECT_NAME
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA


unit-test:
  image: python:3.9
  stage: test
  before_script:
    - mkdir ~/.ssh && ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - echo "$SSH_CHURN_ACCESS" > ~/.ssh/id_ed25519 && chmod 600 ~/.ssh/id_ed25519
    - echo "$CONFIG_YML" > chaos/infrastructure/config/config_template.yml
    - export YOTTA_ML3_CONFIGURATION_PATH=$(pwd)/chaos/infrastructure/config/config_template.yml
    - pip install poetry
    - poetry config virtualenvs.in-project true --local
    - poetry install
    - source .venv/bin/activate
  script:
    - pytest chaos/test/unit
    - echo $CI_MERGE_REQUEST_TARGET_BRANCH_NAME 
    - echo $CI_COMMIT_BRANCH
  rules:
    # We don't launch unit-tests if merging into main, all other cases are ok
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" 
          || $CI_COMMIT_BRANCH == "main"
      when: never 
    - when: on_success



build-docker-image:
  stage: build
  image: docker:latest
  services:
  - docker:20.10.16-dind

  before_script:
    - echo "build docker image"
    - echo $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - echo $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - echo $CI_COMMIT_BRANCH
    - echo "image " $IMAGE_NAME $IMAGE_TAG
    # We need to create the folder /tmp because using the docker --ssh, the "~" characeter didn't work 
    - mkdir /tmp/.ssh && ssh-keyscan gitlab.com >> /tmp/.ssh/known_hosts
    - echo "$SSH_CHURN_ACCESS" > /tmp/.ssh/id_ed25519 && chmod 600 /tmp/.ssh/id_ed25519
    - cat $GCP_SA_KEY | docker login -u _json_key --password-stdin https://$REGISTRY_HOST
  script:
    - DOCKER_BUILDKIT=1 docker build --ssh churn_ssh=/tmp/.ssh/id_ed25519 -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
  rules :
    # Only build and push image if we are merging into develop. 
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop"
          || $CI_COMMIT_BRANCH == "develop"


push-docker-image:
  stage: push_image
  image: docker:latest
  services:
  - docker:20.10.16-dind

  before_script:
    - echo "push docker"
    - echo $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - echo $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - echo $CI_COMMIT_BRANCH

    # We need to create the folder /tmp because using the docker --ssh, the "~" characeter didn't work 
    - mkdir /tmp/.ssh && ssh-keyscan gitlab.com >> /tmp/.ssh/known_hosts
    - echo "$SSH_CHURN_ACCESS" > /tmp/.ssh/id_ed25519 && chmod 600 /tmp/.ssh/id_ed25519
    - cat $GCP_SA_KEY | docker login -u _json_key --password-stdin https://$REGISTRY_HOST
  script:
    - DOCKER_BUILDKIT=1 docker build --ssh churn_ssh=/tmp/.ssh/id_ed25519 -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
    - echo "image " $IMAGE_NAME $IMAGE_TAG
  rules :
    # Only push image to registry on push of develop branch. 
    - if: $CI_COMMIT_BRANCH == "develop"


deployment-kubernetes:
  stage: deployment
  image: google/cloud-sdk
    
  before_script:
    # Set gcloud credentials
    - echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
    - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
    - apt update
    - apt-get -y install google-cloud-cli-gke-gcloud-auth-plugin
    - export USE_GKE_GCLOUD_AUTH_PLUGIN=True
    - gcloud auth activate-service-account --key-file=$GCP_SA_KEY --project=coyotta-2022
    - gcloud container clusters get-credentials ml-prod-coyotta-2022-gke  --region=europe-west1-b
  script:
    - echo $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - echo $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - echo "image " $IMAGE_NAME $IMAGE_TAG
    - kubectl set image deployment/chaos-1-deployment churn-api=$IMAGE_NAME:$IMAGE_TAG
  rules:
    # Only deploy if the MR is comming from develop to main.
  - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == "develop" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"

